# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Lastly, I performed analytics on the data. 

# Creating the table
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.

#Average popularity, danceability, and energy by artist and track.
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

# Top 10 most popular songs
SELECT 
artist_name
,track_name
,popularity 
FROM spotifydata
ORDER BY popularity DESC
LIMIT 10;

# Which artists have the most songs in the Top 50
SELECT artist_name, COUNT(*) AS song_count 
FROM spotifydata
GROUP BY artist_name
ORDER BY song_count DESC 
LIMIT 10;

# Finding the longest and shortest songs 
SELECT artist_name, track_name, duration_ms
FROM spotifydata
ORDER BY duration_ms DESC 
LIMIT 1;

SELECT artist_name, track_name, duration_ms
FROM spotifydata
ORDER BY duration_ms
LIMIT 1;

